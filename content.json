[{"title":"走近 Java","date":"2018-07-28T06:45:28.000Z","path":"2018/07/28/走近Java/","text":"第 1 章 走近 Java 走近 Java ，了解 Java 技术体系、Java 发展史、Java 虚拟机发展史、Java 技术未来。声明：文章图片来源于网络 1. Java 技术体系 2. Java 发展史 3. Java 虚拟机发展史曾经涌现过太多虚拟机，或经典或优秀或有特色，记录几个特殊的。 世界第一款商用虚拟机：Sun ClassicSun JDK 和 OpenJDK 默认虚拟机及目前使用范围最广的虚拟机：HotSpot VM号称世界上运行最快的虚拟机：JRockit VM虚拟机 Dalvik VM 是 Andriod 平台的核心组成部分之一 4. Java 技术未来了解 Java 技术未来发展趋势，关注新版 JDK 提供的特性。 4.1 模块化原因：不希望为了系统中一小块的功能而不得不下载、安装部署及维护整套庞大的系统。进展：目前规范竞争中，一方为 Sun Jigsaw(拼图)另一方为 IBM OSGi。 4.2 混合语言原因：越来越复杂的软件，单一的 Java 语言已经无法很好满足，越来越多的基于 Java 虚拟机的语言被应用到软件项目中，Java 平台上的多语言混合编程正成为主流，每种语言都可以针对自己擅长的方面更好的解决问题。进展：出现了越来越多的基于 Java 虚拟机的语言，Java 虚拟机向多语言虚拟机发展。 4.3 多核并行原因：CPU 硬件发展方向由高频率转向为多核发展：JDK 1.5 java.util.concurrentJDK 1.7 java.util.concurrent.forkjoinJDK 1.8 LambdaOpenJDK 子项目 Sumatra，目前显卡的运算能力和并行能力已经远远超过了 CPU在 JDK 外围出现了 Hadoop MapReduce 一个简单易懂的并行框架 4.4 进一步丰富语法原因：好用才是王道，语法糖越来越多发展：OpenJDK coin 子项目 4.5 64位虚拟机原因：在 JavaEE 方面，企业级应用经常需要使用超过 4GB 的内存，对于 64 位虚拟机的需求是非常迫切的。目前 64 虚拟机内存耗用大，运行速度慢发展：由 32 位 向 64 位过渡中","tags":[{"name":"Java虚拟机","slug":"Java虚拟机","permalink":"http://freemeng.com/tags/Java虚拟机/"}]},{"title":"docker初识","date":"2018-04-14T03:22:38.000Z","path":"2018/04/14/docker初识/","text":"听说 Docker 好久了，昨天听同事说，我们测试环境的 linux 都不是物理机，都是 Docker，记得之前微信收藏了一篇介绍 Docker 的文章，便翻出来看了一下，有输入就要有输出，所以写篇小文，记下基本知识，本文只涉及 Docker 介绍，如果想详细了解，请阅读参考文章。 一.啥是 Docker 虚拟机 -&gt; Linux 容器 -&gt; Docker 虚拟机（virtual machine） 就是带环境安装的一种解决方案。它可以在一种操作系统里面运行另一种操作系统，比如在 Windows 系统里面运行 Linux 系统。 Linux 容器不是模拟一个完整的操作系统，而是对进程进行隔离。或者说，在正常进程的外面套了一个保护层。有点像轻量级的虚拟机，能够提供虚拟化的环境，但是成本开销小得多。 Docker Docker 属于 Linux 容器的一种封装，提供简单易用的容器使用接口。它是目前最流行的 Linux 容器解决方案。Docker 将应用程序与该程序的依赖，打包在一个文件里面。运行这个文件，就会生成一个虚拟容器。程序在这个虚拟容器里运行，就好像在真实的物理机上运行一样。 二.为啥使用 Docker1.合作开发的时候，在本机可以跑，别人的电脑跑不起来。- 崩溃2.服务器自己的程序挂了，结果发现是别人程序出了问题把内存吃完了，自己程序因为内存不够就挂了。- 倒霉3.公司要弄一个活动，可能会有大量的流量进来，公司需要再多部署几十台服务器。- 搞死 三.Docker 用途Docker 的主要用途，目前有三大类。 （1）提供一次性的环境。比如，本地测试他人的软件、持续集成的时候提供单元测试和构建的环境。（2）提供弹性的云服务。因为 Docker 容器可以随开随关，很适合动态扩容和缩容。（3）组建微服务架构。通过多个容器，一台机器可以跑多个服务，因此在本机就可以模拟出微服务架构。 三.基本概念 镜像Docker 把应用程序及其依赖，打包在 image 文件里面 仓库存放 image 容器运行 image四.参考文章 1.Docker 入门，看这篇就够了2.Docker 入门教程3.Docker 微服务教程","tags":[{"name":"docker","slug":"docker","permalink":"http://freemeng.com/tags/docker/"}]},{"title":"hadoop java heap space","date":"2018-04-13T14:44:38.000Z","path":"2018/04/13/hadoop-java-heap-space/","text":"1.问题描述在 hdoop 集群执行 job 时报错，命令如下：1hadoop jar xxx-job-1.0.0.jar xxxx \"2018-04-02\" \"/d1/d2\" 错误信息：1218/04/12 09:13:06 INFO mapreduce.Job: Task Id : attempt_1523454594132_0002_m_000002_0, Status : FAILEDError: Java heap space 2.原因分析错误信息较少，但可以看出内存溢出了，下面开始排查问题：1.确认 hadoop 版本12hadoop versionHadoop 2.7.2 2.确认是 map 阶段，还是 reduce 阶段发生异常http://[nameNodeServer]:8088/cluster 我的是 map 阶段内存溢出 3.解决方法查询官方文档，更改内存配置http://hadoop.apache.org/docs/r2.6.5/hadoop-yarn/hadoop-yarn-common/yarn-default.xmlhttp://hadoop.apache.org/docs/r2.6.5/hadoop-mapreduce-client/hadoop-mapreduce-client-core/mapred-default.xml 第一个配置文件 mapred-site.xml 123456789101112&lt;property&gt;&lt;name&gt;mapred.child.java.opts&lt;/name&gt;&lt;value&gt;-Xmx6144m&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;mapreduce.map.memory.mb&lt;/name&gt;&lt;value&gt;4096&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;mapreduce.reduce.memory.mb&lt;/name&gt;&lt;value&gt;4096&lt;/value&gt;&lt;/property&gt; mapred.child.java.opts 定义 mapreduce 执行的 container 容器的执行 jvm 参数 mapreduce.map.memory.mb 单独指定 map 阶段的执行 jvm 参数 mapreduce.reduce.memory.mb 单独指定 reduce 阶段的执行 jvm 参数map 阶段：mapreduce.admin.map.child.java.opts &lt; mapred.child.java.opts &lt; mapred.map.child.java.opts， 也就是说最终会采用 mapred.map.child.java.opts 定义的 jvm 参数，如果有冲突的话。 第二个配置文件 yarn-site.xml 1234&lt;property&gt;&lt;name&gt;yarn.nodemanager.vmem-pmem-ratio&lt;/name&gt;&lt;value&gt;8&lt;/value&gt;&lt;/property&gt; yarn.nodemanager.vmem-pmem-ratio 虚拟内存与物理内存比率 参考文档Hadoop作业JVM堆大小设置优化Hadoop Mapreduce Error: GC overhead limit exceeded","tags":[{"name":"hadoop","slug":"hadoop","permalink":"http://freemeng.com/tags/hadoop/"}]},{"title":"Day01 hadoop 初识","date":"2018-04-12T14:16:44.000Z","path":"2018/04/12/Day01-hadoop-初识/","text":"0. 学习目标123第一天接触具体的大数据框架，总目标是让学习者建立起大数据和分布式的宏观概念1.理解 hadoop 是什么，用于做什么，大体上怎么用2.通过一个案例的演示说明，理解数据挖掘系统的基本流程和结构 1. hadoop 背景介绍 什么是 hadoop ? 1.hadoop 是 apache 旗下的一套开源软件平台 2.hadoop 提供的功能：利用服务器集群，根据用户的自定义业务逻辑，对海量数据进行分布式处理 3.hadoop 的核心组件有 1.HDFS（分布式文件系统） 2.YARN（运算资源调度系统） 3.MAPREDUCE（分布式运算编程框架） 4.广义上来说，hadoop 通常是指一个更广泛的概念—— hadoop 生态圈 hadoop 应用案例 1.用户画像（百度大数据） 2.网站点击流日志数据挖掘（谷歌分析、友盟统计） hadoop 生态圈及各组成部分简介重点组件：HDFS：分布式文件系统MAPREDUCE：分布式运算程序开发框架Oozie：工作流调度框架HIVE：基于大数据技术（文件系统+运算框架）的 SQL 数据仓库工具HBASE：基于 HADOOP 的分布式海量数据库ZOOKEEPER：分布式协调服务基础组件Mahout：基于 mapreduce/spark/flink 等分布式运算框架的机器学习算法库Sqoop：数据导入导出工具Flume：日志数据采集框架 2. 离线数据分析流程介绍(网站点击流日志数据挖掘系统)","tags":[{"name":"hadoop","slug":"hadoop","permalink":"http://freemeng.com/tags/hadoop/"}]},{"title":"Python Demo(定投基金小工具)优化一","date":"2018-04-02T14:22:26.000Z","path":"2018/04/02/Python-Demo-定投基金小工具-优化一/","text":"第一版实在简陋，赶紧完善一下，闲话少说，上代码。 123456789101112131415from salary_increase import count_moneywhile True: print(''' 定投十年翻十倍! 开始定投吧! 0.个人加薪计划, 1.退出;''') option = int(input('请选择你的定投计划:\\n')) if option == 0: pe = float(input('请输入市盈率(PE):\\n')) result = count_money(pe) print('''经计算，本期应投入金额为: %d 元！''' % result) else: break 优化内容1.增加循环，进行多次计算；2.增加退出功能；3.由于 PE 多为小数，即浮点数，类型转换由 int 改为 float ;4.对输出结果进行格式化。 效果图 源码地址 https://github.com/zmdstr/xueqiu","tags":[{"name":"python","slug":"python","permalink":"http://freemeng.com/tags/python/"}]},{"title":"Python Demo(定投基金小工具)","date":"2018-04-02T13:39:13.000Z","path":"2018/04/02/Python-Demo-定投基金小工具/","text":"学习 python 有一段时间了，因为工作不使用 python，后来就中断学习了，最近在看有关基金定投的书籍，尝试用 python 写一下相关的工具，顺便复习一下 python，希望通过实际应用，可以继续学习 python。作为 python 初学者，文章难免有疏漏，一个人自学实在不易，欢迎留言指正，共同进步！ 1.功能在定期不定额进行定投基金时，需要根据当前是第几个月定投和当前定投基金的市盈率（PE）计算投入金额。 2.代码实现xueqiu.py 12345678910111213from salary_increase import count_moneyprint('''定投十年翻十倍！开始定投吧！请选择你的定投计划：0.个人加薪计划;1.待创建;''')option = int(input())if option == 0: pe = int(input('请输入 PE ')) result = count_money(pe) print('''经计算，本期应投入金额为''' + str(result))else: print('待开发！') salary_increase.py 1234567891011from datetime import datedef count_money(pe): begin_year = date(2018, 3, 17).year begin_month = date(2018, 3, 17).month today_year = date.today().year today_month = date.today().month num = (begin_year-today_year)*12 + begin_month - today_month result = 1000*1.01**num*(10/pe) return result 3. 运行效果 4.知识点梳理 输出 用 print() 在括号中加上字符串，就可以向屏幕上输出指定的文字。‘’’ ‘’’ 为多行字符串 输入 用 input() 来获取用户输入，注意获得的是字符串，需要使用 int() 进行类型转换 条件判断 注意 python 使用缩进来定义代码块，而 java 使用 ｛｝ 定义函数 python 使用 def 定义一个函数，缩进的内容为函数体 datetime 模块 在计算当前月，是第几个月时，引入 datetime 模块中的 date 模块 导入模块 datetime 为内置模块 5. 源码地址https://github.com/zmdstr/xueqiu 6. 总结这是一个很简单的 python Demo，功能还不完善，后续会继续完善！","tags":[{"name":"python","slug":"python","permalink":"http://freemeng.com/tags/python/"}]},{"title":"关于目标","date":"2018-03-11T11:24:59.000Z","path":"2018/03/11/关于目标/","text":"I have a dream ! 最近在看一本理财方面的书籍《小狗钱钱》，感触颇多，记录一下。 1. 目标与理想记得小的时候，我们在快要毕业的时候，会买一本同学录，发给我们的同学，让同学们留下一些自己的介绍，以及对我们未来的祝福。我记得里面有一项叫理想。 “成为一名出色的科学家！” “当一名医生！” “考上一个好大学！” …… 这是我记忆中的理想，现在想想，当时其实只是想了想以后想成为一个什么样的人，就填了那么一项。结果呢？估计大多数人，那时填下的理想都随着时间远去了吧。但一定有坚持的人，他们一定都实现了自己的理想，或在实现自己理想的路上。 人活着没有理想，那与行尸走肉又有什么区别？ 人生需要理想，那是我们活着的意义，一个企业也应该有自己的愿景，那是一个企业发展壮大的原动力。 我觉得目标就是小理想，是在我们实现自己理想的过程中，每一个阶段的小理想。 2. 制定自己的目标周末了，不知道干什么，打打游戏，刷刷头条，看看小说，觉得生活没意义，不充实，那么我觉得你离行尸走肉不远了。没有目标，你当然不觉得时间的珍贵了，就会肆意挥霍，而不是所谓的放松。 我的目标是什么呢？其实，很简单，提升自己的方方面面啊。 我想加薪，那么去看一下，目前阻碍你加薪的是什么？技术哪里有短板？定一个目标，今年我要加薪 30% 。 我想父母开心，利用业余时间，学几个拿手菜，过年回家时，露一手。定一个目标，今年我要让父母非常开心。 我想 ….. ，定一个目标，…… 3. 制定实现目标的计划有了目标，就像我们玩吃鸡一样，目标就是得第一，顺利吃鸡，接下来就是和队友配合，不断向目标靠近。 从哪跳伞？选择什么路线？这都是实现目标的计划。 同样的道理，我们必须制定实现自己目标的计划，然后按照计划去实施，一步一步去靠近我们的目标。 4. 不断想象目标实现时的场景实现目标的路上是充满诱惑的，如何坚持下去？ 梦想画册是《小狗钱钱》一书中提到的，就是为自己的梦想准备一个画册，贴满与你梦想相关的照片。 你想拥有一个大 house ，那么就去找一个漂亮的房子的照片。你想脱单，就去找一个令人羡慕的情侣图。然后呢？你觉得很闲的时候，就去看一看，憧憬一下梦想实现时的样子。你会有很强的动力，这时你就可以坚持执行计划了。想想你目标实现时的喜悦，你身处一个属于你的大 house 中，阳光撒在你的脸上，暖洋洋的…… 经常想象目标实现时的场景，会我们坚持下去的动力，使我们能坚定不移的执行计划，不断靠近目标。 5. 愿你成功有了目标，生活有了方向，不再迷茫，我们清楚现在做的一切是为了什么，并且，深知这一切是值得的，因为我们很清楚，在目标实现的那一刻，那种感觉是多么美妙的。 愿你成功！","tags":[{"name":"随笔","slug":"随笔","permalink":"http://freemeng.com/tags/随笔/"}]},{"title":"一次 redis 连接超时排查","date":"2017-10-14T13:06:01.000Z","path":"2017/10/14/一次-redis-连接超时排查/","text":"errorredis 连接超时1Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.SocketTimeoutException: connect timed out 排查过程由于是突然发生，代码没有任何改变，所以没有去检查代码及 redis 连接的配置。1.现象开发环境(我的本地)连接超时，但是测试环境(云环境 redis 安装环境)连接的是同一个 redis，代码都一样，连接正常。开发环境使用 rediscli 客户端，连接超时。2.telnet 测试开发环境 telnet redis 所在服务器端口，无法建立连接测试环境 telnet redis 所在服务器端口，可以正常建立连接初步确认应该是防火墙问题。我们的服务器是在某云上的，先去云上看了一下防火墙端口设置，没问题。然后去看了物理机 CentOs 系统的防火墙也没问题。突发奇想，使用开发环境连接手机热点，telnet OK，启动项目连接正常，难道，公司网络部做了限制。。。 解决方法经确定，公司网络部对端口进行了限制，所以更改了服务器上 redis 的端口，解决了此问题。 总结我这个情况是突发，如果你的 redis 刚搭建，配置完就报连接超时的错误，要去看看 redis 配置文件中的下面两个配置： 12#bind 127.0.0.1 #绑定 ipprotected-mode no #保护模式","tags":[{"name":"redis","slug":"redis","permalink":"http://freemeng.com/tags/redis/"}]},{"title":"使用 idea debug 远程 tomcat","date":"2017-08-19T00:45:43.000Z","path":"2017/08/19/使用-idea-debug-远程-tomcat/","text":"操作步骤 配置 idea 在 idea 中点击 Edit Configuration 配置一个 remote server主要配置项 Host服务器外网 ip Port端口号配置 OK 后，idea 会生成一个配置，显示在 Command line arguments for running remote JVM 下方1-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000 配置服务器 tomcat 进入服务器 tomcat 下的 bin 目录编辑 catalina.sh 文件，修改 CATALINA_OPTS，添加上面 idea 给出的配置 1-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000 编辑后完整配置如下： 12CATALINA_OPTS=\"-Djava.awt.headless=true -Djava.net.preferIPv4Stack=true -DSERVERID=207 -DRuntimeEnv=prd \"JAVA_OPTS=\"-server -Xms2048m -Xmx2048m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000\" 启动服务器 tomcat idea 中选择远程 remote 启动 debug 从 idea 的 Console 中可以看到如下信息： 1Connected to the target VM, address: '120.92.xx.xx:8000', transport: 'socket' 设置断点，进行调试 idea 中停止调试 点击调试停止按钮，从 idea 的 Console 中可以看到如下信息：1Disconnected from the target VM, address: '120.92.xx.xx:8000', transport: 'socket' debug 远程 tomcat 结束 注意事项 8000 端口是我们设置的调试的端口，可以更改，需要注意防火墙开放该端口的访问； 注意 8000 端口不要被占用了，不同的 tomcat 应该配置不同的 debug 端口。 拓展阅读java 调试原理","tags":[{"name":"tomcat","slug":"tomcat","permalink":"http://freemeng.com/tags/tomcat/"}]},{"title":"Java不仅仅是一门编程语言","date":"2017-06-26T14:28:03.000Z","path":"2017/06/26/Java不仅仅是一门编程语言/","text":"Java 不仅仅是一门编程语言，它是一个技术体系。一次编写，到处运行。 Java 技术体系主要由以下几部分组成： java 程序设计语言 各种硬件平台上的 java 虚拟机 Java API类库 来自商业机构和开源社区的第三方Java类库 一般情况下，一个程序员只要了解了必要的Java API、Java语法，以及学习适当的第三方开发框架，就已经基本能满足开发的需要了。 体系图： Java 与 C 的区别Java 走的是二进制跨平台路线，发布的是“跨平台”的二进制可执行文件（Java Class 文件），然后依赖每个平台上实现的 JVM 来执行之；C 走的是源码跨平台路线，发布的是“源码”，在每个平台上重新编译一遍就可以使用，两者的取舍有所不同。参考 https://www.zhihu.com/question/30674148C 偏底层，Java 应用更广，Java 虚拟机是使用 C 语言开发的。 java 虚拟机Oracle 目前取得了三大商业虚拟机的其中两个：JRockit 和 HotSpot。HotSpot 是 SunJDK 和 OpenJDK 中所带的虚拟机，也是目前使用范围最广的 Java 虚拟机。JRockit 曾经号称“世界上速度最快的Java虚拟机”。","tags":[{"name":"java虚拟机","slug":"java虚拟机","permalink":"http://freemeng.com/tags/java虚拟机/"}]},{"title":"2016年流行的UI框架","date":"2017-06-25T08:42:37.000Z","path":"2017/06/25/2016年流行的UI框架/","text":"最近，一直在做移动端 web 开发，记录一下使用的前端框架。目前使用过两个，一个是 Amaze UI，一个是 WeUI 。 UI 是什么意思 ?这是百度百科的定义：UI 即 User Interface( 用户界面)的简称。泛指用户的操作界面，UI 设计主要指界面的样式，美观程度。而使用上，对软件的人机交互、操作逻辑、界面美观的整体设计则是同样重要的另一个门道。好的 UI 不仅是让软件变得有个性有品味，还要让软件的操作变得舒适、简单、自由，充分体现软件的定位和特点。 UI 框架又是什么意思 ?UI 是用户界面的英文简称，那么 UI 框架又是什么呢?框架又可以理解为模板，UI 框架也就是 UI 模板。这和编程里的封装有些类似，就是说一些 UI 设计的常用效果已经被别人封装成了 UI 框架，你想实现哪个效果只要直接调用就行，不需要太纠结于底层实现。例如：一个提示框、一个轮播图。以下转自知乎，地址如下： https://zhuanlan.zhihu.com/p/22707913 ，感谢原作者！目前，众多互联网公司 APP 都嵌入了大量的 HTML5，移动端的开发越来越重视，HTML5 的运用场景也越来越多了。在移动 Web 开发的过程中，使用合适的移动 WEB UI 框架可以大大提升我们的开发效率。下面就把 2016 年最流行的移动 Web 前端 UI 框架分享给大家。 Amaze UIAmaze UI 是一个轻量级（所有CSS和JS gzip后100kB左右）、Mobile first 的前端框架， 基于开源社区流行前端框架编写。Amaze UI Github 地址：GitHub - amazeui/amazeui: Amaze UI, a mobile-first and modular front-end framework.Amaze UI官网：Amaze UI | 中国首个开源 HTML5 跨屏前端框架 Frozen UIFrozen UI 是一个简单易用，轻量快捷，为移动端服务的前端框架，专注于移动 web 的 UI 框架，基于腾讯手机 QQ 规范。Frozen UI Github 地址：FrozenUI - 专注于移动 web 的 UI 框架 SUISUISUISUI 是一套基于 bootstrap 开发的前端组件库，同时她也是一套设计规范。通过 SUI，可以非常方便的设计和实现精美的页面。SUI 官网：http://sui.taobao.org/ ZUIZUIZUIZUI 是一个开源前端实践方案，帮助你快速构现代跨屏应用。ZUI Github 地址：GitHub - easysoft/zui: ZUI is an HTML5 front UI framework. H-uiH-uiH-uiH-ui 前端框架是在 bootstrap 的思想基础上基于 HTML、CSS、JAVASCRIPT 开发的轻量级 web 前端框架，开源免费，简单灵活，兼容性好，满足大多数中国网站。H-ui Github 地址：jackying (辉哥) · GitHubpure.csspure.css 一组小,响应 CSS 模块,您可以使用在每一个 web 项目pure.css Github 地址：GitHub - yahoo/pure: A set of small, responsive CSS modules that you can use in every web project. UIkitUIkitUIkitUIkit 是 YOOtheme 团队开发的一款轻量级、模块化的前端框架，可快速构建强大的前端 web 界面。UIKit 使用的变量基于 LESS，具有体积小、模块化、可轻松地自定义主题及响应式设计可在多种环境中使用等特点。UIkit 中文网为广大国内开发者提供详尽的中文文档、代码实例等，帮助开发者快速掌握并使用这一框架。UIkit Github地址：GitHub - uikit/uikit: A lightweight and modular front-end framework for developing fast and powerful web interfaces. BootstrapBootstrap 是 Twitter 推出的一个用于前端开发的开源工具包。它由 Twitter的设计师 Mark Otto 和 Jacob Thornton 合作开发，是一个 CSS/HTML 框架。目前，Bootstrap 最新版本为3.3.7 。Bootstrap 中文网致力于为广大国内开发者提供详尽的中文文档、代码实例等，助力开发者掌握并使用这一框架。Bootstrap 中文网：Bootstrap中文网 拼图拼图号称中国版的 Bootstrap，优秀的跨屏响应式布局前端开发框架(CSS框架)，国内前端框架先驱及领导者，能自动适应电脑、平板、手机等设备，让 web 前端开发更简单、快速、便捷。拼图官网：http://www.pintuer.com/ Plane UIPlane UI 是一个构建 HTML5 应用的跨终端响应式前端界面框架及解决方案。Plane UI Github地址：Plane UI - HTML5 跨终端响应式前端界面框架 FoundationFoundation 5 是我们最快、最好的构建。多用的功能来帮助编写代码和学习比以往任何时候都要快。Foundation 官网：Foundation | The most advanced responsive front-end framework in the world. muimui 是最接近原生 APP 体验的高性能框架。mui Github 地址：GitHub - dcloudio/mui: 最接近原生 APP 体验的高性能框架 WeUIWeUI 是一套同微信原生视觉体验一致的基础样式库，由微信官方设计团队为微信 Web 开发量身设计，可以令用户的使用感知更加统一。包含button、cell、dialog、 progress、 toast、article、icon等各式元素。WeUI Github 地址：GitHub - weui/weui: A UI library by WeChat official design team, includes the most useful widgets/modules in mobile web applications. AraleArale 立足于支付宝的前端需求和国内前端社区，基于 Sea.js 和 spm 生态圈，致力发展小而美的前端模块架构，建立了一套从编码测试到部署的开发体系， 是一个开放、简单、易用的前端解决方案。Arale 模块均兼容于 IE6+ 以及 Chrome/Firefox/Safari/Opera 的最新稳定版。Arale 官网：http://aralejs.org/ Semantic UISemantic UI 是一款语义化设计的前端开源框架，其功能强大，使用简单，为设计师和开发师提供可复用的完美设计方案。Semantic UI Github 地址：GitHub - Semantic-Org/Semantic-UI-pt-br: Semantic dá poder a designers e desenvolvedores através da criação de um vocabulário comum para UI Jingle UIJingle UI 是一个基于 html5、css3 开发轻量级的移动 webapp 框架，提供一些基本交互方式，常用的组件(scroll,actionsheet,sidemenu,toggle,push2refresh……)，帮助您更方便的开发移动应用。Jingle UI Github 地址：GitHub - shixy/Jingle: Jingle UI是一个基于html5、css3 开发轻量级的移动 webapp 框架，提供一些基本交互方式，常用的组件(scroll,actionsheet,sidemenu,toggle,push2refresh……)，帮助您更方便的开发移动应用。 CMUICMUI 是一个专攻移动网页的 UI 框架，它提供了丰富的组件和简洁的接口，开箱即用。CMUI 帮助开发者摆脱样式细节和兼容性困扰，从而腾出更多精力投入到业务开发中。CMUI Github 地址：GitHub - CMUI/CMUI: Lightweight UI solution for mobile web.","tags":[{"name":"web","slug":"web","permalink":"http://freemeng.com/tags/web/"}]},{"title":"孔雀鱼","date":"2017-06-25T03:02:21.000Z","path":"2017/06/25/孔雀鱼/","text":"孔雀鱼（学名：Poecilia reticulata），又名孔雀花鳉、虹鳉，是一种常见小型热带观赏鱼，颜色鲜艳，品系多，很受水族爱好者欢迎。 分布及生活环境原产于南美洲的委内瑞拉、巴巴多斯、特立尼达、巴西北部与圭亚那，喜欢12至26度的水温，普遍是生活在硬水，酸碱值偏弱碱性（pH7至7.5）的环境。 特征孔雀鱼活泼好动，食性广泛，喜食鱼虫等动物类食物，繁殖力强，有人因此称其为“百万鱼”，喜欢群居活动。 繁殖孔雀鱼的繁殖周期相当短，从幼鱼到具繁殖能力的成鱼仅需2至3个月。每月繁殖一次。孔雀鱼会吃食同伴所生之幼鱼，甚至连自己所生之幼鱼亦同，故培育时需特别注意怀孕的母鱼，适时隔离于阴暗处，并放于水草缸中待产，可获得最高的生产存活率及仔鱼收获率。孔雀鱼是卵胎生的鱼类一胎约可生数十尾幼鱼，从母鱼的年龄、体型、健康情形来判断，初次生产的母鱼通常只会生10至20尾左右，如是体长超过5公分的成熟母鱼，生上百只是不成问题的。孔雀鱼的养殖上，可以加入少许盐类以减少孔雀鱼的疾病感染，例如水霉病等发生。 我的孔雀鱼 参考文章维基百科","tags":[{"name":"随笔","slug":"随笔","permalink":"http://freemeng.com/tags/随笔/"}]},{"title":"时间戳转_Date_字符串出现误差","date":"2017-06-24T09:44:18.000Z","path":"2017/06/24/时间戳转-Date-字符串出现误差/","text":"1. 问题描述： 前台一个日期选择组件，提交的数据格式为“1991-05-10”，后台使用 SimpleDateFormat 进行转换，获取到时间戳，存入数据库，数据库字段为 bigint 类型，保存后，日期回显，显示为 “1991-05-09”，出现一天的误差，但不是所有日期都存在误差。 前台获取到时间戳，转换后调用 toLocaleDateString 回显数据。 2. 解决方法： 后台，在使用 SimpleDateFormat 时，设置时区，如下： 1simpleDateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\")); 3. 相关代码如下： 1234567891011SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy-MM-dd\"); simpleDateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\")); Date birthdayDate = null; try &#123; birthdayDate = simpleDateFormat.parse(birthday); long time = birthdayDate.getTime(); long l = time / 1000; member.setBirthday(l); &#125; catch (ParseException e) &#123; LOGGER.error(\"出生日期转换异常\", e); &#125; 12345678910&lt;script&gt;// 变换日期 Date.prototype.toLocaleDateString = function () &#123; return this.getFullYear() + \"-\" + (this.getMonth() + 1) + \"-\" + this.getDate(); &#125;; var date_before = $(\"#birthday_source\").val(); var unixTimestamp = new Date(date_before * 1000); var new_date = unixTimestamp.toLocaleDateString(); $(\"#birthday_input\").val(new_date);&lt;/script&gt; 1&lt;input id=\"birthday_input\" name=\"birthday\" value=\"\" onchange=\"save()\" style=\"text-align: right\"/&gt;","tags":[{"name":"web","slug":"web","permalink":"http://freemeng.com/tags/web/"}]},{"title":"input_file上传美化","date":"2017-06-24T09:39:38.000Z","path":"2017/06/24/input-file上传美化/","text":"最近有一天，因为头像上传的 file 隐藏问题，加了个班，今天刚好有时间，赶紧记录一下。 先上代码，就是一个 css 样式优化。 123456789101112131415/*选择文件上传input css*/.am-form-file&#123; position:relative; overflow:hidden;&#125;.am-form-file input[type=file]&#123; position:absolute; z-index:1; width:100%; font-size:50rem; opacity:0; cursor:pointer;&#125; html 文件123456&lt;li class=\"am-form-file\"&gt; &lt;div class=\"weui-cell__ft\"&gt; &lt;img id=\"icon\" src=\"$&#123;member.face!''&#125;\"class=\"user-img\"&gt; &lt;/div&gt; &lt;input id=\"file1\" name=\"file\" type=\"file\" hidefocus=\"true\" onchange=\"uploadyasuo(this.files,this.id);\"accept=\"image/*\"&gt;&lt;/li&gt; 注意重点，就是在 file 的父级容器设置样式，容器可以是 li div 等。","tags":[{"name":"web","slug":"web","permalink":"http://freemeng.com/tags/web/"}]},{"title":"git教程推荐","date":"2017-06-24T09:30:56.000Z","path":"2017/06/24/git教程推荐/","text":"网络上 git 教程很多，首推廖雪峰 git 教程。廖雪峰 git 教程地址另外我在 github 上记录了学习笔记，包括常用 git 常用命令及学习 git 过程中遇到的问题等，另外欢迎来测试 pull request。我的学习笔记最后推荐一下其他文章： 如果对 git 的一些命令不理解，请阅读下面的文章图解 git git 入门必读git - the simple guide 更进一步高效使用Git","tags":[{"name":"git","slug":"git","permalink":"http://freemeng.com/tags/git/"}]},{"title":"github博客搭建整理","date":"2017-06-11T01:45:27.000Z","path":"2017/06/11/github博客搭建整理/","text":"写这篇文章的出发点很简单，好久没有维护 github 上的博客了，完全不记得如何开始了，今天准备整理一下相关知识。 一、概念说明github page 官方介绍地址：github page Github Pages 免费的静态站点，其特点：免费托管、自带主题、支持自制页面等。 GitHub Pages 本用于介绍托管在 GitHub 的项目， 不过，由于他的空间免费稳定，用来做搭建一个博客再好不过了。 github Pages 可以被认为是用户编写的、托管在 github 上的静态网页。 GitHub Pages 分两种，一种是你的 GitHub 用户名建立的username.github.io 这样的用户&amp;组织页（站），另一种是依附项目的 pages。想建立个人博客是用的第一种，形如 cnfeat.github.io 这样的可访问的站，每个用户名下面只能建立一个。 hexo Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 git node.js 使用github pages服务搭建博客的好处有：全是静态文件，访问速度快；免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；博客内容可以轻松打包、转移、发布到其它平台；等等； 原理由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。","tags":[{"name":"github博客","slug":"github博客","permalink":"http://freemeng.com/tags/github博客/"}]},{"title":"github博客个人记录","date":"2017-06-11T01:44:02.000Z","path":"2017/06/11/github博客个人记录/","text":"samsung 博客目录D:\\blog\\blog hexo 配置文件如上图中的 _config.yml 目前使用的主题theme: yilia github关联 hexo s是开启本地预览服务，打开浏览器访问 http://localhost:4000 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故。 主题目录 命令解释hexo clean 清理 public 内容hexo g 生成静态页hexo s 启动本地预览服务，端口为 4000hexo d 部署到 github 上传到github如果你一切都配置好了，发布上传很容易，一句 hexo d 就搞定，当然关键还是你要把所有东西配置好。 保存 cname 等文件提交之后网页上一看，发现以前其它代码都没了，此时不要慌，一些非md文件可以把他们放到source文件夹下，这里的所有文件都会原样复制（除了md文件）到public目录的：由于 hexo 默认会把所有 md 文件都转换成 html，包括 README.md，所有需要每次生成之后、上传之前，手动将README.md复制到 public 目录，并删除 README.html。 写博客 如何让博文列表不显示全部内容","tags":[{"name":"github博客","slug":"github博客","permalink":"http://freemeng.com/tags/github博客/"}]},{"title":"github写博客步骤","date":"2017-06-11T01:38:08.000Z","path":"2017/06/11/github写博客步骤/","text":"移植简书博客 cd 到 hexo 博客目录 使用 hexo 命令生成新的文档 打开新建文档，完成博客内容 在适当位置加 1&lt;!--more--&gt; hexo d -g 生成并提交即可，要是本地查看 hexo s -g备注：如果发生异常，可以使用命令 hexo clean 清理 public 目录","tags":[{"name":"github博客","slug":"github博客","permalink":"http://freemeng.com/tags/github博客/"}]},{"title":"我的数字资产保护","date":"2017-06-03T01:55:31.000Z","path":"2017/06/03/我的数字资产保护/","text":"随着在线支付（支付宝等）的发展，不使用现金生活已成现实，而网络理财导致很多钱都在网络账户中，如果有一天挂了，那么其他人想取出里面的钱估计会比较费劲。最近又开始了听播客，王掌柜的节目不错，也学到了一些很 cool 的知识，数字资产保护这个词，就是从他那听到的。所以打算今天就处理一下，自己的数字资产。 我的数字资产 余额宝 百度理财 桔子理财 懒人理财 同花顺炒股一看，还不少，虽然没几个钱，但是鸡蛋还是不能放到一个篮子里的，哈哈。 场景设想 恩，就是突然。。。你懂得。。。其实拿到手机不知道密码，没关系，都是可以进行找回的。那这时的关键就是手机的密码了，这个需要告知，恩，先记录一下需要告知的，告知方式我们一会儿再说。如果有手势解锁要一并告知，尤其一些软件有开锁设置。突然想到，在使用支付宝转账时，还要输入指纹和密码，那么，这个密码是要告知的，不然，账号进去了，钱也取不出来啊？ 说一下密码关于密码，我们还是要考虑一下，账号都是需要密码的，我目前的策略能第三方登陆的，我就不注册，但不知道这种方式安全不？ 密码都很重要么？我不认为都很重要，当然我只是一个普通人，因此那些社交账号，那些没有钱的账号，密码并不是很重要。好像跑题了，这些里面没有资产，但是我要将密码就要说。 如何设置密码也许你所有账号都是一个密码，这样密码一般就不会忘记了，但是安全性很低。王掌柜推荐了几次密码管理器，身边的极客朋友也有使用收费密码管理器的，我尝试了王掌柜推荐的密码管理器感觉不是很方便。我建议这样处理密码，将密码分为几类 第一类 基础类这类密码一定程度上依赖实体，它们通常只能设置数字，一般比较简单，例如：手机开机密码，银行卡密码等。 第二类 复杂不重要类这类密码一般都是网络账号密码，例如：论坛密码，知乎密码等。 第三类 复杂重要类这类密码一般都与钱相关，例如：支付包密码，邮箱密码等。建议第一类和第二类根据自己的密码策略，自己生成密码。第三类使用密码生成器。 master password这是王掌柜推荐的密码生成器，它是根据你输入的用户名和主密码及一个密码标识，然后通过选择的算法，生成密码。输入项一致，那么得到的密码就是一致的。它没有上传存储你的密码，因此很安全。 告知方式听说 gmail 有这个功能，但是没找到，找到后再更新。所以，你的告知方式可以是口述或者纸质记录。 总结数字资产保护，我们要针对重要的账户设置安全性高的密码，例如使用密码生成器。我们要告知亲友，你的密码策略。包括：手机开机密码，应用锁密码，一般支付密码及密码生成器主密码及密码标识。","tags":[{"name":"随笔","slug":"随笔","permalink":"http://freemeng.com/tags/随笔/"}]},{"title":"正则表达式","date":"2017-05-06T13:56:41.000Z","path":"2017/05/06/正则表达式/","text":"regex 正则表达式 首先贴出两个网址：第一个《正则表达式30分钟入门教程》http://deerchao.net/tutorials/regex/regex.htm第二个 在线正则测试网站http://tool.oschina.net/regex/ what is regex?正则表达式就是 字符串规则使用正则表达式，就是1.为了找到符合规则的字符串，例如爬虫中的应用；2.为了验证字符串是否符合规则，例如用户表单校验。 base Content ^匹配你要用来查找的字符串的开头，$匹配结尾。javascript 中使用要使用 // 对表达式进行包裹，java 中直接使用即可。javascript 使用例子：1/^[a-zA-Z0-9]&#123;6,20&#125;$/ project example以下内容为自己项目中使用过的正则表达式java中应用123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596/** * * @Description:手机号码校验 * @author: * @time:2016年12月14日 下午12:41:41 */public static boolean telephoneNumCheck(String telephoneNum) &#123; Pattern p = Pattern .compile(\"^(((13[0-9]&#123;1&#125;)|(15[0-9]&#123;1&#125;)|(17[0-9]&#123;1&#125;)|(18[0-9]&#123;1&#125;))+\\\\d&#123;8&#125;)$\"); Matcher m = p.matcher(telephoneNum); return m.matches();&#125;/** * * @Description:身份证号码校验 * @author: * @time:2016年12月14日 下午12:43:05 */public static boolean idCardNumCheck(String idCardNum) &#123; Pattern p = Pattern .compile(\"^(^[1-9]\\\\d&#123;7&#125;((0\\\\d)|(1[0-2]))(([0|1|2]\\\\d)|3[0-1])\\\\d&#123;3&#125;$)|(^[1-9]\\\\d&#123;5&#125;[1-9]\\\\d&#123;3&#125;((0\\\\d)|(1[0-2]))(([0|1|2]\\\\d)|3[0-1])((\\\\d&#123;4&#125;)|\\\\d&#123;3&#125;[Xx])$)$\"); Matcher m = p.matcher(idCardNum); if (m.matches()) &#123; if (idCardNum.length() == 18) &#123; Integer[] idCardWi = &#123; 7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2 &#125;; // 这是除以11后，可能产生的11位余数、验证码，也保存成数组 Integer[] idCardY = &#123; 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 &#125;; // 用来保存前17位各自乖以加权因子后的总和 Integer idCardWiSum = 0; for (int i = 0; i &lt; 17; i++) &#123; idCardWiSum += Integer.parseInt(idCardNum.substring(i, i + 1)) * idCardWi[i]; &#125; int idCardMod = idCardWiSum % 11;// 计算出校验码所在数组的位置 String idCardLast = idCardNum.substring(17);// 得到最后一位身份证号码 if (idCardMod == 2) &#123; if (\"X\".equals(idCardLast) || \"x\".equals(idCardLast)) &#123; return true; &#125; else &#123; return false; &#125; &#125; else &#123; // 用计算出的验证码与最后一位身份证号码匹配，如果一致，说明通过，否则是无效的身份证号码 if (Integer.parseInt(idCardLast) == idCardY[idCardMod]) &#123; return true; &#125; else &#123; return false; &#125; &#125; &#125;else&#123; return true; &#125; &#125; else &#123; return false; &#125;&#125;/** * * @Description:邮编校验 * @author: * @time:2016年12月14日 下午2:01:21 */public static boolean zipCodeCheck(String zipCode) &#123; Pattern p = Pattern.compile(\"^[1-9]\\\\d&#123;5&#125;$\"); Matcher m = p.matcher(zipCode); return m.matches();&#125;/** * * @Description:身份证姓名校验 * @author: * @time:2016年12月14日 下午2:23:49 */public static boolean nameCheck(String name) &#123; Pattern p = Pattern .compile(\"[\\\\u4E00-\\\\u9FA5]&#123;2,5&#125;(?:·[\\\\u4E00-\\\\u9FA5]&#123;2,5&#125;)*\"); Matcher m = p.matcher(name); return m.matches();&#125;/** * 过滤特殊字符 * @param str * @return */public static String specialCharacterFilter(String str)&#123; String regEx = \"[`~!@#$%^&amp;*()+=|&#123;&#125;':;',\\\\[\\\\].&lt;&gt;/?~！@#￥%……&amp;*（）——+|&#123;&#125;【】‘；：”“’。，、？]\"; Pattern p = Pattern.compile(regEx); Matcher m = p.matcher(str); return m.replaceAll(\"\").trim(); &#125; javascript 应用1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283/**校验手机号*/$.validator.addMethod(\"mobilePhone\",function(value)&#123; var myreg = /^(((13[0-9]&#123;1&#125;)|(15[0-9]&#123;1&#125;)|(17[0-9]&#123;1&#125;)|(18[0-9]&#123;1&#125;))+\\d&#123;8&#125;)$/; if(myreg.test(value))&#123; return true; &#125;else &#123; return false; &#125;&#125;,\"请输入正确的手机号码\");/**校验长度*/$.validator.addMethod(\"checkNameLen\", function(value) &#123; if(/^[\\u4e00-\\u9fa5a-zA-Z0-9]&#123;2,20&#125;$/.test(value)) &#123; return true; &#125; return false;&#125;, \"请输入2-20个汉字或2-20位字符,不包含特殊字符\");/**校验长度*/$.validator.addMethod(\"checkUnameLen\", function(value) &#123; if(/^[a-zA-Z0-9]&#123;6,20&#125;$/.test(value))&#123; return true; &#125; return false;&#125;, \"请输入6-20位字符,不包含汉字及特殊字符\");/**密码校验**/$.validator.addMethod(\"checkPassword\", function(value) &#123; if(/^[a-zA-Z0-9_]&#123;6,20&#125;$/.test(value))&#123; return true; &#125; return false;&#125;, \"请输入6-20位数字、字母或下划线\");/** * 校验全局唯一用户名 */$.validator.addMethod(\"primaryUname\", function(value, element) &#123; var succ = false; if($(\"#customerId\").val()!=\"\")&#123; succ = true; &#125; var username=$(\"#uname\").val(); if(username == value)&#123; succ=true &#125;else&#123; $.ajax(&#123; type : \"POST\", url : unameCkeckPath, data : &#123;nickName : value&#125;, async : false, success : function(msg) &#123; if (msg == \"succ\") &#123; succ = true &#125; &#125; &#125;);&#125; return succ;&#125;, \"账户名已存在\");$.validator.addMethod(\"pwdEqUname\", function(value) &#123; var username = $(\"#userName\").val(); if (value != username) &#123; return true; &#125; else &#123; return false; &#125;&#125;, \"密码不能和用户名一样\");//检查第二次输入密码是否与上面的一样$.validator.addMethod(\"repassEqual\", function(value) &#123; var pwd1 = $(\"#loginPassword\").val(); var pwd2 = value; if (pwd1==pwd2) &#123; return true; &#125; else &#123; return false; &#125;&#125;, \"两次输入密码不一样\");// 检查邮箱，为空不检查$.validator.addMethod(\"email\", function(value) &#123; var isNul = false; if(!value)&#123;isNul = true&#125; return isNul || /^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+$/.test(value);&#125;, \"请输入正确的邮箱\");","tags":[{"name":"正则","slug":"正则","permalink":"http://freemeng.com/tags/正则/"}]},{"title":"单例设计模式学习","date":"2017-03-18T09:48:23.000Z","path":"2017/03/18/单例设计模式学习/","text":"昨天巧合看到了单例设计模式，便一发不可收拾，记录一下。 首先推荐一篇博客，地址如下：http://www.cnblogs.com/java-my-life/archive/2012/03/31/2425631.html#3641445这是我看到单例设计模式写的最好的，文中介绍了饿汉式、懒汉式、DCL、类级内部类，最后说到了枚举内部类。真的写的很好，非常感谢作者！看了大量的实现，最终看到了枚举内部类，这个是《effective java》中提到的，准备买了读一读，很早就听说了这本书，但是一直没买。 什么时候用单例呢？网上查了一下，都说连接池、线程池，什么资源管理器，回家后又把《大话设计模式》翻了出来，读了一下，里面是讲得图像化界面的工具箱，对于我来说，没有用了。 早上坐车，没事我就继续查，一直在用spring框架，对象都让他创建了，那个是单例么？又温习了一下，spring 创建对象的三种方式，包括构造方法创建，静态方法创建，工厂方法创建，这些都是配置xml文档。推荐阅读链接：http://www.cnblogs.com/LiuChunfu/p/5574383.html 不对啊，我一直在用注解啊？继续查。@Autowired @Resource 原来@Autowired 是spring的注解，而@Resource 是JAVAEE的注解，文章说为了避免耦合，建议使用@Resource ，但是 spring 一定会使用啊，害怕耦合么？继续翻，知道了通过注解创建的对象，默认用的是工厂方法，默认是单例的。 总结 单例，确保类只有一个实例，实现方式： 私有构造方法； 对外提供公共访问方法； 自己创建唯一对象。使用 spring 框架，通过注解创建的 controller service dao 默认都是单例的。 以上，为个人记录，如有遗漏或错误，欢迎大家指教。","tags":[{"name":"design pattern","slug":"design-pattern","permalink":"http://freemeng.com/tags/design-pattern/"}]},{"title":"springmvc poi excel 导入","date":"2017-03-01T05:50:42.000Z","path":"2017/03/01/springmvc poi excel/","text":"本文使用的工具类参考了 http://raising.iteye.com/blog/2232167 这篇文章，由于报错做了改动，在此感谢原作者。项目源码地址：https://github.com/zmdstr/demomaven pom123456789101112 &lt;!-- poi --&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.poi&lt;/groupId&gt; &lt;artifactId&gt;poi&lt;/artifactId&gt; &lt;version&gt;3.14&lt;/version&gt; &lt;/dependency&gt; &lt;!-- 文件上传 --&gt; &lt;dependency&gt; &lt;groupId&gt;commons-fileupload&lt;/groupId&gt; &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt; &lt;version&gt;1.2.2&lt;/version&gt;&lt;/dependency&gt; jsp12345678910111213141516171819&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%&gt;&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"&gt;&lt;title&gt;file upload&lt;/title&gt;&lt;script type=\"text/javascript\" src=\"$&#123;pageContext.request.contextPath &#125;/js/jquery-1.11.1.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\" src=\"$&#123;pageContext.request.contextPath &#125;/js/ajaxfileupload.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\" src=\"$&#123;pageContext.request.contextPath &#125;/js/file-upload.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;h3&gt;批量导入excel测试&lt;/h3&gt; &lt;form action=\"\"&gt; &lt;input type=\"file\" id=\"file\" name=\"file\"/&gt; &lt;input type=\"button\" value=\"导入数据\" onclick=\"upload()\"&gt; &lt;/form&gt;&lt;/body&gt;&lt;/html&gt; file-upload.js12345678910111213141516function upload()&#123; console.log(\"点击上传按钮\"); $.ajaxFileUpload(&#123; url : \"upload1\", //dataType : 'json', secureuri : false, fileElementId : 'file', success : function(res, status) &#123; //服务器成功响应处理函数 if (status) &#123; console.log(status); &#125;&#125;, error : function(res, status, e) &#123;//服务器响应失败处理函数 alert(\"导入数据异常：文件导入过程异常。\"); &#125; &#125;); &#125; springmvc.xml中需要增加的配置12345678&lt;!-- 文件上传配置 --&gt; &lt;bean id=\"multipartResolver\" class=\"org.springframework.web.multipart.commons.CommonsMultipartResolver\"&gt; &lt;!-- 文件的最大上传大小 --&gt; &lt;property name=\"defaultEncoding\" value=\"UTF-8\" /&gt; &lt;property name=\"maxUploadSize\" value=\"1058576000\" /&gt; &lt;property name=\"uploadTempDir\" value=\"/uploadFile/temp/\" /&gt; &lt;/bean&gt; controller1234567891011121314151617181920212223242526272829303132@RequestMapping(\"/upload\") public @ResponseBody String fileUpload(@RequestParam(value = \"file\") MultipartFile excelFile) &#123; InputStream inputStream = null; String flag = \"导入成功！\"; try &#123; inputStream = excelFile.getInputStream(); &#125; catch (IOException e) &#123; e.printStackTrace(); flag = \"导入失败\"; &#125; List&lt;Map&lt;String, String&gt;&gt; excel = ExcelImportUtil.parseExcel(inputStream); for (Map&lt;String, String&gt; row : excel) &#123; String id = row.get(\"id\"); String tbUniversityName = row.get(\"tb_university_name\"); String tbUniLoc = row.get(\"tb_uni_loc\"); String tag1 = row.get(\"tag1\"); String tag2 = row.get(\"tag2\"); String tag3 = row.get(\"tag3\"); String tag4 = row.get(\"tag4\"); UniversityBaseInfo baseInfo = new UniversityBaseInfo(); baseInfo.setId(Integer.valueOf(id)); baseInfo.setTag1(tag1); baseInfo.setTag2(tag2); baseInfo.setTag3(tag3); baseInfo.setTag4(tag4); baseInfo.setTbUniLoc(tbUniLoc); baseInfo.setTbUniversityName(tbUniversityName); myService.insert(baseInfo); &#125; return flag; &#125;&#125; ExcelImportUtils1234567891011121314151617181920212223242526272829303132333435363738394041424344454647public class ExcelImportUtil &#123; public static List&lt;Map&lt;String, String&gt;&gt; parseExcel(InputStream fis) &#123; List&lt;Map&lt;String, String&gt;&gt; data = new ArrayList&lt;Map&lt;String, String&gt;&gt;(); try &#123; HSSFWorkbook book = new HSSFWorkbook(fis); HSSFSheet sheet = book.getSheetAt(0); int firstRow = sheet.getFirstRowNum(); int lastRow = sheet.getLastRowNum(); for (int i = firstRow; i &lt; lastRow; i++) &#123; Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;(); HSSFRow row = sheet.getRow(i); int firstCell = row.getFirstCellNum(); int lastCell = row.getLastCellNum(); for (int j = firstCell; j &lt; lastCell; j++) &#123; HSSFCell cell2 = sheet.getRow(firstRow).getCell(j); String key = cell2.getStringCellValue(); HSSFCell cell = row.getCell(j); String val = \"\"; if (null != cell) &#123; if (cell.getCellType() == HSSFCell.CELL_TYPE_NUMERIC) &#123; cell.setCellType(HSSFCell.CELL_TYPE_STRING); &#125; val = cell.getStringCellValue(); &#125; // 如果是表头，不放入map if (i == firstRow) &#123; break; &#125; else &#123; map.put(key, val); &#125; // System.out.println(map); &#125; // 剔除表头 if (i != firstRow) &#123; // 载入一行数据 data.add(map); System.out.println(map); &#125; &#125; System.out.println(data); book.close(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; return data; &#125;&#125;","tags":[{"name":"poi","slug":"poi","permalink":"http://freemeng.com/tags/poi/"}]},{"title":"distpicker使用记录","date":"2017-02-27T09:51:28.000Z","path":"2017/02/27/distpicker使用记录/","text":"今天使用distpicker遇到了一些问题，记录一下。插件地址 使用说明 需要引入的 js 文件123&lt;script type=\"text/javascript\" src=\"./././js/jquery/distpicker.data.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\" src=\"./././js/jquery/distpicker.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\" src=\"./././js/jquery/main.js\"&gt;&lt;/script&gt; 页面dom12345&lt;div data-toggle=\"distpicker\"&gt; &lt;select id=\"eprovinceName\" data-province=\"浙江省\" name=\"provinceName\"&gt;&lt;/select&gt; &lt;select id=\"ecityName\" data-city=\"杭州市\" name=\"cityName\"&gt;&lt;/select&gt; &lt;select id=\"edistrictName\" data-district=\"西湖区\" name=\"districtName\"&gt;&lt;/select&gt; &lt;/div&gt; js 初始化 12345678910 $(function()&#123; $(\"#distpicker\").distpicker('destroy'); $(\"#distpicker\").distpicker(&#123; province: '省份名', city: '城市名', district: '区名', autoSelect: true, placeholder: false &#125;);&#125;); 数据回显 123456$(\"#eprovinceName\").val(data.provinceName); $(\"#eprovinceName\").trigger(\"change\"); $(\"#ecityName\").val(data.cityName); $(\"#ecityName\").trigger(\"change\"); $(\"#edistrictName\").val(data.districtName); $(\"#edetailAddress\").val(data.detailAddress); 遇到的问题 我最开始导入的是distpicker.min.js和distpicker.data.min.js 结果报错无法使用，更换非压缩板OK； 本想设置初始值”—请选择—“，结果多次尝试，以失败告终。","tags":[{"name":"js","slug":"js","permalink":"http://freemeng.com/tags/js/"}]},{"title":"gitHub-hexo-Next个人博客搭建记录","date":"2017-02-15T13:49:47.000Z","path":"2017/02/15/gitHub-hexo-Next个人博客搭建记录/","text":"最近使用 gitHub+hexo+Next 搭建了个人博客，关于如何搭建就不记录了，网上有很多教程，写的也很详细，这里记录一些我遇到的问题。 使用 gitbash 发布后，无法访问原因：查看发布后项目发现 CNAME 文件不见了解决方法：在 source 文件夹下放置一份 CNAME 网站内容存在乱码原因：站点配置文件未设置语言解决方法：在站点配置文件 _config.yml 中配置语言为中文，即 language: zh-Hans 没有标题原因：文章中没有1---title: 解决方法：1---title:","tags":[{"name":"github博客","slug":"github博客","permalink":"http://freemeng.com/tags/github博客/"}]},{"title":"SVN与GIT","date":"2017-01-30T09:53:42.000Z","path":"2017/01/30/SVN与GIT/","text":"之前一直使用SVN，准备学习一下GIT，上网查询了资料，对比一下，记录下来。 零、为什么会出现版本控制工具SVN和GIT都是版本控制工具，那么为什么会出现版本控制工具呢？在软件开发过程中，我们经常不断的重构代码，某次修改后发现，效果还不如之前的代码，这时我们需要恢复到修改之前的状态。简单的说就是备份，每次进行修改前，进行备份，后悔时再恢复原来的版本，这样我们会有很多不同版本，而SVN及GIT就是一个可以帮助我们管理版本的工具。便于多人开发，使我们可以追踪代码的更新，找到Bug的提交者。 一、什么是SVNSVN是Subversion的简称，是一个开放源代码的版本控制系统。说得简单一点SVN就是用于多个人共同开发同一个项目。 二、SVN工作流程1.从服务器获取最新代码； 2.在本地进行开发； 3.完成任务，上传到服务器。 三、SVN的缺点在我的使用中感觉最大的缺点就是如果连接不上服务器，基本就无法工作，即无法提交代码，获取代码，查看历史版本等。 四、什么是GITGit是一个开源的分布式版本控制系统。 五、放两张图片对比一下","tags":[{"name":"git","slug":"git","permalink":"http://freemeng.com/tags/git/"}]},{"title":"fiddler使用记录","date":"2017-01-23T07:55:46.000Z","path":"2017/01/23/fiddler使用记录/","text":"纯粹好奇，小小实践了一下fiddler，分享一下~ 目的html5 项目使用微信浏览器访问，出现bug，准备抓取请求分析一下 工具Fiddler4 电脑设置 安装fiddler cmd 查看ip地址 启动fiddler，设置 Tool-&gt;Options-&gt;如下图：手机设置 连接WIFI（保证与fiddler安装的电脑在同一WIFI下），点击链接的WIFI进行高级设置，注意需要再次输入密码，高级设置中选择代理，手动代理，代理设置中，host 为主机的ip地址，port 为fiddler里面默认的8888，如果被占用在启动fiddler时会提示你更改。测试这时从微信公众号进入要测试的界面，点击后，从fiddler右侧inspectors选项卡，可以看到request及response相关信息。补充 filters使用使用过程中发现好多，不想查看的请求也被抓取了，那么我们就可以使用filters如下图： 自动保存responseBody为html文件点击Rules-&gt;CustomizeRules 对文件内容进行修改 123456789101112static function OnBeforeResponse(oSession: Session) &#123; if (m_Hide304s &amp;&amp; oSession.responseCode == 304) &#123; oSession[\"ui-hide\"] = \"true\"; &#125; if (oSession.oRequest[\"User-Agent\"].indexOf(\"Android\")&gt; -1 &amp;&amp; oSession.HTTPMethodIs(\"CONNECT\")) &#123;oSession.oResponse.headers[\"Connection\"] = \"Keep-Alive\"; &#125; if (oSession.fullUrl.Contains(\"shengxuece.com\"))&#123; oSession.utilDecodeResponse();//消除保存的请求可能存在乱码的情况 //oSession.SaveResponse(\"D:\\\\Fiddler Sessions\\\\\"+oSession.id+\"_Request.htm\",false); oSession.SaveResponseBody(\"D:\\\\Fiddler Sessions\\\\\"+oSession.id+\"_Request.htm\");&#125; &#125; https请求抓取fiddler相关设置如下图：使用手机访问电脑IP地址：8888（默认端口）会进入fiddler Echo Service 点击下面的 FiddlerRoot certificate 下载证书，并到系统设置中进行安装，然后就可以顺利抓取https 了。","tags":[{"name":"fiddler","slug":"fiddler","permalink":"http://freemeng.com/tags/fiddler/"}]},{"title":"mybatis异常","date":"2017-01-20T09:59:00.000Z","path":"2017/01/20/mybatis异常/","text":"异常描述attempted to return null from a method with a primitive return type (int) 解决方式使用mysql的ifnull函数 异常发生原因我的项目ssm框架，在实现一个查询功能时，由于查询结果返回null,而mybatis 封装的sql应该返回int类型，导致抛出上面异常。使用mysql的ifnull函数，当结果为null时，函数返回0，这样就解决了异常。 ifnull函数用法MYSQL IFNULL(expr1,expr2)如果expr1不是NULL，IFNULL()返回expr1，否则它返回expr2。简单讲，将那个返回值为null的列放在expr1处，expr2写0，这样返回null时，就会显示0，可以参考我下面的例子：IFNULL()返回一个数字或字符串值，取决于它被使用的上下文环境。 补充mysql 函数之前使用的不多，就使用过一些聚合函数，count()、sun()、max()、min()等，今天学习了ifnull函数，顺便搜索了一下，还有好多函数，例如：数学函数、字符串函数、日期和时间函数、加密函数、控制流函数、格式化函数、类型转换函数和系统信息函数等。","tags":[{"name":"mybatis","slug":"mybatis","permalink":"http://freemeng.com/tags/mybatis/"}]},{"title":"mybatis_mapper_异常","date":"2017-01-20T01:57:32.000Z","path":"2017/01/20/mybatis-mapper-异常/","text":"异常描述Could not find parameter map java.util.Map 异常原因1&lt;select id=\"selectNumAddToShopCollect\" parameterMap=\"java.util.Map\" resultType=\"int\"&gt; 将 parameterType 错写成了 parameterMap 总结mapper 文件中的错误，好多都是 parameterMap 写成了parameterType 之类的，而且报错的位置提示并不具体，需要自己慢慢找。","tags":[{"name":"mybatis","slug":"mybatis","permalink":"http://freemeng.com/tags/mybatis/"}]}]